name: Node.js CI [Unit tests]

on:
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
        DATABASE_HOST: ${{ vars.DATABASE_HOST }}
        DATABASE_USER: ${{ vars.ROOT_DATABASE_USER }}
        DATABASE_PASSWORD: ${{ vars.ROOT_DATABASE_PASSWORD }}
        DATABASE_NAME: ${{ vars.DATABASE_NAME }}

    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v2
    
    - name: write variables into env file
      run: |
        echo "DATABASE_HOST: ${{ vars.DATABASE_HOST }}" >> .env
        echo "DATABASE_USER: ${{ vars.ROOT_DATABASE_USER }}" >> .env
        echo "DATABASE_PASSWORD: ${{ vars.ROOT_DATABASE_PASSWORD }}" >> .env
        echo "DATABASE_NAME: ${{ vars.DATABASE_NAME }}" >> .env
        echo "below are environment variables"
        cat .env
      shell: bash

    - name: install npm modules
      run: npm ci 

    - name: fund npm
      run: npm fund
       
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Start MySql Server
      run: sudo systemctl start mysql

    - name: Create database in the MySql server
      run: sudo mysql --user=$DATABASE_USER --password=$DATABASE_PASSWORD -e "create database $DATABASE_NAME";

    - name: Test webapp application
      run: npm test