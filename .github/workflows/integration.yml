# name: CI/CD test

# on:
#   pull_request:
#     branches:
#       - main

# jobs:
#   Test-Integration:
#     runs-on: ubuntu-latest
#     env:
#       DATABASE_HOST: ${{ vars.DATABASE_HOST}}
#       DATABASE_NAME: ${{ vars.DATABASE_NAME }}
#       DATABASE_USER: ${{ vars.DATABASE_USER }}
#       DATABASE_PASSWORD: ''
#       PORT: ${{ vars.PORT }}
#       MYSQL_DATABASE: ${{ vars.DATABASE_NAME }}
#     # services:
#     #   mysqldb:
#     #     image: mysql:5.7
#     #     ports:
#     #       - 3306:3306
#     #     env:
#     #       MYSQL_ROOT_HOST: '%'
#     #       MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
#     #       MYSQL_ROOT_PASSWORD: ''
#     #       MYSQL_DATABASE: $MYSQL_DATABASE
#     #     options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=30s --health-retries=5
#     steps:
#       - name: Checkout Webapp Code
#         uses: actions/checkout@v4
      
#       - name: setup mysql
#         run: 

#       - name: print env variables
#         run: printenv

#       - name: Setup Node.js environment
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
      
#       - name: downloading npm packages
#         run: npm install
        
#       #- name: install sequelize and mysql2
#       #  run: npm install sequelize mysql2 
      
#       - name: start node application
#         env:
#           DATABASE_NAME: ${{ env.DATABASE_NAME }}
#           DATABASE_USER: ${{ env.DATABASE_USER }}
#           DATABASE_PASSWORD: ${{ env.DATABASE_PASSWORD }}
#           DATABASE_HOST: ${{ env.DATABASE_HOST }}
#           PORT: ${{ env.PORT }}
#         run: npm test


name: Node.js CI [Unit tests]

on:
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
        DATABASE_HOST: ${{ vars.DATABASE_HOST }}
        DATABASE_USER: ${{ vars.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
        DATABASE_NAME: ${{ vars.DATABASE_NAME }}

    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v2
    - run: npm i    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Start MySql Server
      run: sudo systemctl start mysql

    - name: Create database in the MySql server
      run: sudo mysql --user=$DATABASE_USER --password=$DATABASE_PASSWORD -e "create database $DATABASE_NAME";

    - run: npm test