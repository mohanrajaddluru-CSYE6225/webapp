name: Run packer build on a template file

on:
  push:
    branches:
        - main
env:
  PRODUCT_VERSION: "1.9.4"
  ami_name: ${{ secrets.AMI_NAME }}
  ami_region: ${{ secrets.AMI_REGION }}
  login_username: ${{ secrets.LOGIN_USERNAME }}
  typeOfInstance: ${{ secrets.TYPEOFINSTANCE }}
  sourceAMIOwner: ${{ secrets.SOURCEAMIOWNER }}
  AMIsharedOwnerID: ${{ secrets.AMISHAREDOWNERID }}
  DATABASE_HOST: ${{ vars.DATABASE_HOST }}
  DATABASE_USER: ${{ vars.DATABASE_USER }}
  DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
  DATABASE_NAME: ${{ vars.DATABASE_NAME }}



jobs:
  packer_build:
    runs-on: ubuntu-latest
    name: Build AMI Image
    env:
        DATABASE_HOST: ${{ vars.DATABASE_HOST }}
        DATABASE_USER: ${{ vars.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
        DATABASE_NAME: ${{ vars.DATABASE_NAME }}
    
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: git checkout current repo code
        uses: actions/checkout@v4
      
      - name: write variables into env file
        run: |
          echo "DATABASE_HOST: ${{ vars.DATABASE_HOST }}" >> .env
          echo "DATABASE_USER: ${{ vars.DATABASE_USER }}" >> .env
          echo "DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_NAME: ${{ vars.DATABASE_NAME }}" >> .env
          echo "below are environment variables"
          cat .env
        shell: bash
      
      - name: install npm modules
        run: npm ci 

      - name: fund npm
        run: npm fund
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
        
      - name: Start MySql Server
        run: sudo systemctl start mysql

      - name: Create database in the MySql server
        run: sudo mysql --user=$DATABASE_USER --password=$DATABASE_PASSWORD -e "create database $DATABASE_NAME";

      - name: Test webapp application
        run: npm test

      - name: zip the file
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: 'webapp.zip'
          exclusions: '*.git* /*node_modules/* '

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: ${{ env.PRODUCT_VERSION }}

      - name: Check version of packer
        run: packer -v
      
      - name: Add required plugins
        run: packer init .

      - name: format packer content
        run: packer fmt .
      
      - name: validate packer
        run: packer validate .
      
      - name: packer build
        run: packer build aws-ubuntu.pkr.hcl
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AMI_REGION }}