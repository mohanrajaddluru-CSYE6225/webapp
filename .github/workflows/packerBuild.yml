name: Run packer build on a template file

on:
  pull_request:
    types: [closed]
env:
  PRODUCT_VERSION: "1.9.4"
  AMI_REGION: ${{ vars.AMI_REGION }}
  LOGIN_USERNAME: ${{ vars.LOGIN_USERNAME }}
  INSTANCE_TYPE: ${{ vars.INSTANCE_TYPE }}
  AMIOWNERID: ${{ vars.AMIOWNERID }}
  AMISHAREDOWNER: ${{ vars.AMISHAREDOWNER }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #DEMO_AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
  #DEMO_AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ vars.AMI_REGION }}
  PORT: ${{ vars.PORT }}


jobs:
  packer_build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    name: Build AMI Image
    env:
        DATABASE_HOST: ${{ vars.DATABASE_HOST }}
        DATABASE_USER: ${{ vars.ROOT_DATABASE_USER }}
        DATABASE_PASSWORD: ${{ vars.ROOT_DATABASE_PASSWORD }}
        DATABASE_NAME: ${{ vars.DATABASE_NAME }}
    
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: git checkout current repo code
        uses: actions/checkout@v4
      
      - name: install npm modules
        run: npm ci 

      - name: fund npm
        run: npm fund
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
        
      - name: Start MySql Server
        run: sudo systemctl start mysql

      - name: Create database in the MySql server
        run: sudo mysql --user=root --password=root -e "create database $DATABASE_NAME";

      - name: Test webapp application
        run: npm test

      - name: zip the file
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: 'webapp.zip'
          exclusions: '*.git* /*node_modules/* '
      
      - name: write variables into env file
        run: |
          echo "DATABASE_HOST: ${{vars.DATABASE_HOST}}" >> .env
          echo "DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_NAME: ${{ vars.DATABASE_NAME }}" >> .env
          echo "DATABASE_HOST: ${{ vars.DATABASE_HOST }}" >> .env
          echo "PORT: ${{ vars.PORT }}" >> .env
          echo "below are environment variables"
          cat .env
        shell: bash

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: ${{ env.PRODUCT_VERSION }}

      - name: Check version of packer
        run: packer -v
      
      - name: Add required plugins
        run: packer init .

      - name: format packer content
        run: packer fmt .
      
      - name: validate packer
        run: packer validate .
      
      - name: packer build
        id: packer_build
        run: |
          packer build -var "region=$AMI_REGION" \
          -var "ssh_username=$LOGIN_USERNAME" \
          -var "instance_type=$INSTANCE_TYPE" \
          -var "ami_users=$AMISHAREDOWNER" \
          -var "owners=$AMIOWNERID" aws-ubuntu.pkr.hcl
          ami_id=$(cat manifest.json | grep -o '"artifact_id": "[^"]*' | cut -d'"' -f4 | cut -d':' -f2)
      - name: Set AMI ID as a variable
        run: echo "AMI_ID=$ami_id" >> $GITHUB_ENV
      
  modify_launch_template_version:
    runs-on: ubuntu-latest
    needs: packer_build
    name: Modify Latest AMI
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} 

      - name: Create New Version of Launch Template
        run: | 
          aws ec2 create-launch-template-version \
          --launch-template-id lt-07a068fafa1cb41b5 \
          --version-description "changing AMI" \
          --source-version 1 \
          --launch-template-data '{"InstanceType":"t2.nano", "ImageId":"${AMI_ID}"}' \
          --region us-east-1 \



    